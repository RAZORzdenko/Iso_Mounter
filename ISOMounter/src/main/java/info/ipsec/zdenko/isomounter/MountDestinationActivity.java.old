package info.ipsec.zdenko.isomounter;

import android.app.Activity;
import android.app.AlertDialog;
import android.content.ActivityNotFoundException;
import android.view.View.OnClickListener;
import android.content.Intent;
import android.net.Uri;
import android.os.Bundle;
import android.support.v4.app.NavUtils;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import android.widget.Toast;


import com.stericson.RootTools.RootTools;
import com.stericson.RootTools.exceptions.RootDeniedException;
import com.stericson.RootTools.execution.CommandCapture;

import java.io.File;
import java.io.IOException;
import java.util.concurrent.TimeoutException;

public class MountDestinationActivity extends Activity implements OnClickListener {

    Button buttonMount, buttonSelectDirectory;
    TextView sourcePath;
    EditText destinationPath;


    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_destination_mount);
        // Show the Up button in the action bar.
        setupActionBar();

        buttonMount = (Button)findViewById(R.id.buttonMount);
        buttonSelectDirectory = (Button)findViewById(R.id.buttonSelectDirectory);
        destinationPath = (EditText)findViewById(R.id.destinationPath);
        sourcePath = (TextView) findViewById(R.id.sourcePath);

        buttonSelectDirectory.setOnClickListener(this);

        //Ziskanie intentu z aktivity
        Intent mojIntent = getIntent();

        //Prenos obsahu v intente medzi aktivitami a vlozenie do textviewu
        sourcePath.setText(
                mojIntent.getStringExtra("isoImagePath")
        );




    }

    /**
     * Set up the {@link android.app.ActionBar}.
     */
    private void setupActionBar() {
        
        getActionBar().setDisplayHomeAsUpEnabled(true);
        
    }

    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.mount_destination, menu);
        return true;
    }
    

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        switch (item.getItemId()) {
            case android.R.id.home:
                // This ID represents the Home or Up button. In the case of this
                // activity, the Up button is shown. Use NavUtils to allow users
                // to navigate up one level in the application structure. For
                // more details, see the Navigation pattern on Android Design:
                //
                // http://developer.android.com/design/patterns/navigation.html#up-vs-back
                //
                NavUtils.navigateUpFromSameTask(this);
                return true;
        }
        return super.onOptionsItemSelected(item);
    }

    //metoda na vytvorenie file manager vyberatka, ktora pri faile zobrazi toast notifikaciu
    public void onClick(View v){

        try{
            Intent fileManagerIntent = new Intent(Intent.ACTION_GET_CONTENT);
            File f = new File(destinationPath.getText().toString());
            fileManagerIntent.setDataAndType(Uri.fromFile(f), "file/");
            startActivityForResult(fileManagerIntent,1);
        }
        catch(ActivityNotFoundException exp){
            Toast.makeText(getBaseContext(), "No File Manager/Explorer Found In Your Device", 5000).show();
        }
    }

    //ziskavanie cesty z file managera
    protected void onActivityResult(int requestCode, int resultCode, Intent data) {

        switch(requestCode){
            case 1:
                if(resultCode==RESULT_OK){

                    String FilePath = data.getData().getPath();
                    String FileName = data.getData().getLastPathSegment();
                    int lastPos = FilePath.length() - FileName.length();
                    String Folder = FilePath.substring(0, lastPos);

                    destinationPath.setText(Folder);
                }
                break;

        }
    }

    public void buttonMountClick(View view) {
        final Intent intentMount = new Intent(this, SummaryActivity.class);

        boolean execution_successful = true;
        String execution_error = "";

        try {
            CommandCapture command = new CommandCapture(0, "mount " + "-o loop " +sourcePath.getText().toString() + " " +destinationPath.getText().toString()) {
                @Override
                public void output(int id, String line)
                {
                    intentMount.putExtra("prikaz", line);
                }
            };
            RootTools.getShell(true).add(command);


        }
        catch (TimeoutException exp) {
            execution_successful = false;
            execution_error = "Timeout has occured";
        }
        catch (IOException exp) {
            execution_successful = false;
            execution_error = "Busybox not installed?";
        }
        catch (RootDeniedException exp){
            execution_successful = false;
            execution_error = "Nemas rutnuty fon";
        }

        if (execution_successful) {
            startActivity(intentMount);
        } else {
            AlertDialog alertDialog = new AlertDialog.Builder(this).create();
            alertDialog.setMessage(execution_error);
            alertDialog.show();

        }


    }

}
